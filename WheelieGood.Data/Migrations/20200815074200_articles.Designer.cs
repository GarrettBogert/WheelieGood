// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WheelieGood.Data;

namespace WheelieGood.Data.Migrations
{
    [DbContext(typeof(WheelieGoodDbContext))]
    [Migration("20200815074200_articles")]
    partial class articles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OdeToBikes.Core.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("OdeToBikes.Core.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUniversal")
                        .HasColumnType("bit");

                    b.Property<int?>("MainImageId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainImageId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OdeToBikes.Core.WebImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BikeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("WheelieGood.Core.Bike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int?>("MainImageId")
                        .HasColumnType("int");

                    b.Property<int>("Make")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wet_Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainImageId");

                    b.ToTable("Bikes");
                });

            modelBuilder.Entity("OdeToBikes.Core.Product", b =>
                {
                    b.HasOne("OdeToBikes.Core.WebImage", "MainImage")
                        .WithMany()
                        .HasForeignKey("MainImageId");
                });

            modelBuilder.Entity("OdeToBikes.Core.WebImage", b =>
                {
                    b.HasOne("WheelieGood.Core.Bike", null)
                        .WithMany("SecondaryImages")
                        .HasForeignKey("BikeId");

                    b.HasOne("OdeToBikes.Core.Product", null)
                        .WithMany("SecondaryImages")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("WheelieGood.Core.Bike", b =>
                {
                    b.HasOne("OdeToBikes.Core.WebImage", "MainImage")
                        .WithMany()
                        .HasForeignKey("MainImageId");
                });
#pragma warning restore 612, 618
        }
    }
}
